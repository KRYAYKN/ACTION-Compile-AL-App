name: Compile AL Application
description: Compile the AL application and test app in a BC container.

inputs:
  CONTAINERNAME:
    description: "The name of the Business Central container."
    required: true
  BC_USERNAME:
    description: "Business Central username."
    required: true
  BC_PASSWORD:
    description: "Business Central password."
    required: true
  Build_StagingDirectory:
    description: "Path to the build staging directory."
    required: true

runs:
  using: "composite"
  steps:
    - name: Compile Main App
      shell: pwsh
      run: |
        $RepoDir = Get-Location
        $appPath = Join-Path $RepoDir "/"

        $password = ConvertTo-SecureString "${{ inputs.BC_PASSWORD }}" -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ("${{ inputs.BC_USERNAME }}", $password)

        Write-Host "Compiling Main App..."
        Compile-AppInBcContainer -appProjectFolder $appPath -containerName "${{ inputs.CONTAINERNAME }}" -credential $credential -GenerateReportLayout "Yes" -ReportSuppressedDiagnostics -EnableCodeCop -EnablePerTenantExtensionCop -EnableUICop -enableExternalRulesets

        $mainApp = Get-ChildItem -Path "$appPath/output" -Filter "*.app" | Select-Object -First 1
        New-Item -Path "${{ inputs.Build_StagingDirectory }}" -ItemType Directory -Force | Out-Null
        Copy-Item -Path $mainApp.FullName -Destination (Join-Path "${{ inputs.Build_StagingDirectory }}" "main.app") -Force
    
    - name: Publish  App to Dev Container
     # if: ${{ github.ref == 'refs/heads/dev' }}
      shell: pwsh
      run: |
        $RepoDir = Get-Location
        $mainAppPath = Join-Path $RepoDir "Artifacts/main.app"
        $password = ConvertTo-SecureString "${{ inputs.BC_PASSWORD }}" -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential ("${{ inputs.BC_USERNAME }}", $password)

        Import-Module BcContainerHelper
        Publish-BcContainerApp -appFile $mainAppPath -containerName "${{ inputs.CONTAINERNAME }}" -credential $credential -sync -install -skipVerification
    
 

#sssss